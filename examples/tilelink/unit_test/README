
This directory contains a tester for TileLink units with one manager
port and one client port.

The manager port may connect to multiple clients.

Setup
=====

Make sure ivy is installed (see ../../README.md).

Build rocket-chip following directions here:

https://github.com/ucb-bar/rocket-chip

Check out unit-testing branch:

$ cd uncore
$ git checkout unit-testing

Set the ROCKETCHIP environment variable to point to the rocket-chip
directory.

Back in this directory, do this:

make

This should create two binaries:

test_L2HellaCacheBank
test_L2BroadcastHub

These are unit testers. Run then like this:

./test_L2HellaCacheBank <options> [seed]

Where seed is a seed for the random number generator. To see a list of
options, use -h.



Bugs found by randomized testing
================================

L2BroadcastHub
--------------

Hub does not handle voluntary releases with the releaseInvalidatAck
type, which represent a release of a clean cache block. This was not
previously detected because the exiting L1 cache invalidates clean
blocks silently.

ivy commit: f77aa11
rocket-chip commit: 4fedd18
uncore commit: 7ff3c3e

Uncore issue 29. This trace shows a case with one cached and one
uncached client. At 120 ps the cached client issues a write-back, and
at the same time the uncached client issues a single-beat read. The
write-back goes through to the outer port at 128ps and 134 ps. Then
the acquire for the uncached read goes through at 136ps before the
grant comes back for the previous write. This violates the ordering
rules, since we have two accesses to the same address that are
un-ordered.

ivy commit: 51c9959
uncore commit: 4c0b530

L2HellaCacheModule
------------------

1) Second and subsequent data beats of inner Grants had incorrect type in
case a shared Acquire was answered by an exclusive Grant. Possibly
this was not previously discovered because the L1 cached ignored these
fields.

ivy commit: fd3f315
rocket-chip commit: 4fedd18
uncore commit: 7ff3c3e

2) Issue 20: A voluntary Release coming too soon after Acquire will
read stale metadata. THis is probably not seen in integration testing
because the actual L1 cannot produce a Release this quickly.

ivy commit: da1db39
rocket-chip commit: 4fedd18
uncore commit: 7ff3c3e

3) After refactoring so the acquire tracker handles concurrent
voluntary releases, a timing error results in loss of writeback data
when the writeback comes too soon after acquire. This is also a
situation that likely could not occur with current L1 design (though
not certain).

ivy commit: af0fb09
uncore commit: 89d7493

4) After fix to above, AcquireTracker still fails to handle a
voluntary release when the second beat occurs after finish (instead
the second beat is picked up as a first beat by ReleasTracker.
Filed as issue #23

ivy commit: 2e6b50f
uncore commit: 0e080c9
command line: test_L2HellaCacheBank 1

5) Data array writes of simultaneous voluntary and involuntary
write-backs to different blocks can interfere.

ivy commit: affec87
uncore commit: 0e080c9
command line: test_L2HellaCacheBank 1


Issues to be resolved
=====================

-- L2 cache requires that Acquires have allocation bit set. This is OK
if unset case is being reserved for future use. Perhaps there should
be an assertion?

-- Should L2 cache cached outer acquires be converted to getBlock?


